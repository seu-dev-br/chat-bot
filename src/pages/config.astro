---
// src/pages/config.astro
---
<html lang="pt-BR">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Configura√ß√µes - Chatbot Virtual</title>
    <style>
      body {
        margin: 0;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background-color: #f5f7fa;
        padding: 20px;
      }

      .config-container {
        max-width: 1000px;
        margin: 0 auto;
      }

      .config-header {
        background: white;
        padding: 30px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        margin-bottom: 30px;
        text-align: center;
      }

      .config-header h1 {
        color: #2c3e50;
        margin-bottom: 10px;
      }

      .config-header p {
        color: #7f8c8d;
        margin: 0;
      }

      .config-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 20px;
      }

      .config-card {
        background: white;
        border-radius: 8px;
        padding: 25px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      }

      .config-card h3 {
        color: #2c3e50;
        margin-top: 0;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
      }

      .form-group {
        margin-bottom: 20px;
      }

      .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: 600;
        color: #2c3e50;
      }

      .form-group input,
      .form-group select,
      .form-group textarea {
        width: 100%;
        padding: 10px 12px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
        font-family: inherit;
      }

      .form-group textarea {
        resize: vertical;
        min-height: 80px;
      }

      .form-group input:focus,
      .form-group select:focus,
      .form-group textarea:focus {
        outline: none;
        border-color: #3498db;
        box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
      }

      .switch {
        position: relative;
        display: inline-block;
        width: 50px;
        height: 24px;
      }

      .switch input {
        opacity: 0;
        width: 0;
        height: 0;
      }

      .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
        border-radius: 24px;
      }

      .slider:before {
        position: absolute;
        content: "";
        height: 18px;
        width: 18px;
        left: 3px;
        bottom: 3px;
        background-color: white;
        transition: .4s;
        border-radius: 50%;
      }

      input:checked + .slider {
        background-color: #3498db;
      }

      input:checked + .slider:before {
        transform: translateX(26px);
      }

      .switch-label {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 15px;
      }

      .btn {
        background: #3498db;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        font-weight: 600;
        transition: background 0.3s;
      }

      .btn:hover {
        background: #2980b9;
      }

      .btn-success {
        background: #27ae60;
      }

      .btn-success:hover {
        background: #229954;
      }

      .btn-group {
        display: flex;
        gap: 10px;
        margin-top: 20px;
      }

      .api-status {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 8px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        margin-top: 10px;
      }

      .api-status.connected {
        background: #d4edda;
        color: #155724;
      }

      .api-status.disconnected {
        background: #f8d7da;
        color: #721c24;
      }

      .integration-card {
        border-left: 4px solid #3498db;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
      }

      .persona-preview {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 20px;
        margin-top: 20px;
      }

      .persona-preview h4 {
        margin-top: 0;
        color: #2c3e50;
      }

      .persona-message {
        background: white;
        border-radius: 12px;
        padding: 15px;
        margin: 10px 0;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
      }

      @media (max-width: 768px) {
        .config-grid {
          grid-template-columns: 1fr;
        }

        body {
          padding: 10px;
        }
      }
    </style>
  </head>
  <body>
    <div class="config-container">
      <div class="config-header">
        <h1>‚öôÔ∏è Configura√ß√µes do Chatbot</h1>
        <p>Personalize o comportamento e apar√™ncia do seu assistente virtual</p>
      </div>

      <div class="config-grid">
        <div class="config-card">
          <h3>ü§ñ Persona do Bot</h3>
          <form id="personaForm">
            <div class="form-group">
              <label for="botName">Nome do Bot:</label>
              <input type="text" id="botName" value="Ana" />
            </div>

            <div class="form-group">
              <label for="botPersonality">Personalidade:</label>
              <select id="botPersonality">
                <option value="friendly">Amig√°vel</option>
                <option value="professional">Profissional</option>
                <option value="casual">Casual</option>
                <option value="formal">Formal</option>
              </select>
            </div>

            <div class="form-group">
              <label for="welcomeMessage">Mensagem de Boas-vindas:</label>
              <textarea id="welcomeMessage" placeholder="Digite a mensagem de boas-vindas...">Ol√°! Sou Ana, sua assistente virtual. Como posso ajudar voc√™ hoje?</textarea>
            </div>

            <div class="form-group">
              <label for="fallbackMessage">Mensagem de Fallback:</label>
              <textarea id="fallbackMessage" placeholder="Mensagem quando n√£o conseguir responder...">Desculpe, n√£o entendi sua pergunta. Poderia reformular ou entrar em contato conosco diretamente?</textarea>
            </div>

            <div class="btn-group">
              <button type="submit" class="btn btn-success">üíæ Salvar Persona</button>
              <button type="button" class="btn" onclick="previewPersona()">üëÅÔ∏è Visualizar</button>
            </div>
          </form>
        </div>

        <div class="config-card">
          <h3>üé® Apar√™ncia</h3>
          <form id="appearanceForm">
            <div class="form-group">
              <label for="primaryColor">Cor Prim√°ria:</label>
              <input type="color" id="primaryColor" value="#3498db" />
            </div>

            <div class="form-group">
              <label for="fontFamily">Fonte:</label>
              <select id="fontFamily">
                <option value="default">Padr√£o do Sistema</option>
                <option value="arial">Arial</option>
                <option value="helvetica">Helvetica</option>
                <option value="georgia">Georgia</option>
              </select>
            </div>

            <div class="switch-label">
              <label class="switch">
                <input type="checkbox" id="darkMode" checked />
                <span class="slider"></span>
              </label>
              <span>Modo Escuro</span>
            </div>

            <div class="switch-label">
              <label class="switch">
                <input type="checkbox" id="animations" checked />
                <span class="slider"></span>
              </label>
              <span>Anima√ß√µes</span>
            </div>

            <div class="btn-group">
              <button type="submit" class="btn btn-success">üé® Aplicar Estilos</button>
              <button type="button" class="btn" onclick="resetStyles()">üîÑ Resetar</button>
            </div>
          </form>
        </div>

        <div class="config-card integration-card">
          <h3>üîó Integra√ß√µes</h3>

          <div class="form-group">
            <label>OpenAI API Key:</label>
            <input type="password" id="openaiKey" placeholder="sk-..." />
            <div class="api-status connected" id="openaiStatus">
              <span>‚óè</span>
              <span>Conectado</span>
            </div>
          </div>

          <div class="form-group">
            <label>Twilio WhatsApp:</label>
            <input type="text" id="twilioNumber" placeholder="+5511999999999" />
            <div class="api-status disconnected" id="twilioStatus">
              <span>‚óè</span>
              <span>Desconectado</span>
            </div>
          </div>

          <div class="form-group">
            <label>Database URL:</label>
            <input type="text" id="dbUrl" placeholder="postgresql://..." />
            <div class="api-status connected" id="dbStatus">
              <span>‚óè</span>
              <span>Conectado</span>
            </div>
          </div>

          <div class="btn-group">
            <button class="btn" onclick="testConnections()">üîç Testar Conex√µes</button>
            <button class="btn btn-success" onclick="saveIntegrations()">üíæ Salvar</button>
          </div>
        </div>

        <div class="config-card">
          <h3>‚ö° Comportamento</h3>

          <div class="switch-label">
            <label class="switch">
              <input type="checkbox" id="autoLearn" checked />
              <span class="slider"></span>
            </label>
            <span>Aprendizado Autom√°tico</span>
          </div>

          <div class="switch-label">
            <label class="switch">
              <input type="checkbox" id="sentimentAnalysis" />
              <span class="slider"></span>
            </label>
            <span>An√°lise de Sentimento</span>
          </div>

          <div class="switch-label">
            <label class="switch">
              <input type="checkbox" id="typingIndicator" checked />
              <span class="slider"></span>
            </label>
            <span>Indicador de Digita√ß√£o</span>
          </div>

          <div class="form-group">
            <label for="responseDelay">Atraso na Resposta (ms):</label>
            <input type="number" id="responseDelay" value="1000" min="0" max="5000" />
          </div>

          <div class="form-group">
            <label for="maxRetries">M√°ximo de Tentativas:</label>
            <input type="number" id="maxRetries" value="3" min="1" max="10" />
          </div>

          <div class="btn-group">
            <button class="btn btn-success" onclick="saveBehavior()">üíæ Salvar Configura√ß√µes</button>
          </div>
        </div>
      </div>

      <div class="persona-preview" id="personaPreview" style="display: none;">
        <h4>üëÄ Pr√©via da Persona</h4>
        <div class="persona-message">
          <strong>Ana:</strong> Ol√°! Sou Ana, sua assistente virtual. Como posso ajudar voc√™ hoje?
        </div>
        <div class="persona-message">
          <strong>Usu√°rio:</strong> Qual o hor√°rio de funcionamento?
        </div>
        <div class="persona-message">
          <strong>Ana:</strong> Atendemos de segunda a sexta, das 8h √†s 18h, e aos s√°bados das 8h √†s 12h.
        </div>
      </div>
    </div>

    <script>
      // Fun√ß√µes de preview e configura√ß√£o
      function previewPersona() {
        const preview = document.getElementById('personaPreview');
        preview.style.display = preview.style.display === 'none' ? 'block' : 'none';
      }

      function testConnections() {
        alert('üîç Testando conex√µes com APIs...\n\n‚úÖ OpenAI: Conectado\n‚úÖ Twilio: Conectado\n‚úÖ Database: Conectado\n\nTodas as integra√ß√µes funcionando!');
      }

      function saveIntegrations() {
        alert('üíæ Configura√ß√µes de integra√ß√£o salvas com sucesso!');
      }

      function saveBehavior() {
        alert('üíæ Configura√ß√µes de comportamento salvas!');
      }

      function resetStyles() {
        document.getElementById('primaryColor').value = '#3498db';
        document.getElementById('fontFamily').value = 'default';
        document.getElementById('darkMode').checked = false;
        document.getElementById('animations').checked = true;
        alert('üîÑ Estilos resetados para padr√£o!');
      }

      // Event listeners
      document.getElementById('personaForm').addEventListener('submit', function(e) {
        e.preventDefault();
        alert('üíæ Persona do bot salva com sucesso!');
      });

      document.getElementById('appearanceForm').addEventListener('submit', function(e) {
        e.preventDefault();
        alert('üé® Apar√™ncia aplicada com sucesso!');
      });

      // Simula√ß√£o de status das APIs
      setTimeout(() => {
        document.getElementById('twilioStatus').className = 'api-status connected';
        document.getElementById('twilioStatus').innerHTML = '<span>‚óè</span><span>Conectado</span>';
      }, 2000);
    </script>
  </body>
</html>
